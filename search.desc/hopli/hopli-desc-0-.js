searchState.loadedDescShard("hopli", 0, "<code>hopli</code> is a collection of commands to help with identity …\nHelper for running your HOPR nodes\nFund given address and/or addressed derived from identity …\nCommands around identity\nCommands around network registry.\nCommands around safe module\nCommands around winning probability\nThis module contains definiation of arguments that specify …\nThis module contains arguments and functions to fund some …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis module contains subcommands for <code>hopli identity</code>, This …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis module contains struct definition,  utility functions …\nThis module contains all the methods used for onchain …\nThis module contains arguments and functions to interact …\nThis module contains arguments and functions to manage …\nThis module contains errors produced in this crate\nThis module contains arguments and functions to interact …\nmapping of networks with its details\nArguments for getting network and ethereum RPC provider.\ncontract addresses used by the network\nPath to the root of foundry project (ethereum/contracts), …\nensures that the network and environment_type exist in …\nType of environment\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the environment type from the network name …\nGet the NetworkDetail (contract addresses, environment …\nGet the NetworkDetail (contract addresses, environment …\nget the provider object\nget the provider object without signer\nblock number to start the indexer from\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nName of the network that the node is running on\nCustomized RPC provider endpoint\nCLI arguments for <code>hopli faucet</code>\nAdditional addresses (comma-separated) to receive funds.\nExecute the faucet command, which funds addresses with …\nReturns the argument unchanged.\nThe amount of HOPR tokens (in floating number) to be …\nCalls <code>U::from(self)</code>.\nArgument to locate identity file(s)\nThe amount of native tokens (in floating number) to be …\nNetwork name, contracts config file root, and customized …\nAccess to the private key, of which the wallet either …\nRun the execute_faucet function\nConverts PeerId from base58 to public key as hex or …\nArguments for PeerID or Public key\nCreate safe and module proxy if nothing exists\nCLI arguments for <code>hopli identity</code>\nMigrate safe and module to a new network\nUpdate the password of identity files\nExecute the command to create identities\nExecute the command to read identities\nupdate the password of an identity file\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEither provide a PeerID in Base58 or public key as hex …\nRun the execute_identity_creation_loop function\nArguments to locate identity file(s) of HOPR node(s)\nArguments to locate identity file(s) of HOPR node(s)\nArguments to locate identity files of HOPR node(s)\nNew password\nNumber of identities to be generated\nPeerID or Public key\nCLI arguments to specify the directory of one or multiple …\nCLI arguments to specify the directory of one or multiple …\nArguments for private key.\nArguments for new password.\nArguments for password.\nArguments for private key.\nCreate one identity file and return the ethereum address\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nread identity files from given directory or file path\nread files from given directory or file path\nreturn the wrapped key\nReturn the wrapped key. cli arg: –private-key\nReturn the wrapped key. cli arg: –manager-private-key\nReturn the wrapped key. cli arg: –password-path\nReturn the wrapped key. cli arg: –new-password-path\nDirectory to all the identity files\nDirectory that contains one or multiple identity files\nPath to one identity file\nPrefix of identity files. Only identity files with the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEither provide a private key as argument or as a specific …\nThe path to a file containing the password that encrypts …\nPassword to encrypt identity file(s)\nThe path to a file containing the password that encrypts …\nEither provide a private key as argument or as a specific …\nTry to read the value from the cli param (given by the …\nRead the value from either the cli arg or env\nRead the value from either the cli arg or env\nRead the value from either the cli arg or env\nRead the value from either the cli arg or env\nRead the private key with a default env value and return …\nRead the default private key and return an address string\nRead the default private key and return an address string\nRead the default private key and return an address string\nRead the default private key and return an address string\nDecrypts identity files and returns an vec of PeerIds and …\nread identity files and return their Ethereum addresses\nencrypt HoprKeys with a new password to an identity file\nStruct to make a multisend transaction, mainly used by …\nEnums of Safe transaction operation\nbuild a multisend transaction data payload\nQuick check if the following values are correct, for one …\nQuick check if the following values are correct, for one …\nDeploy a MULTICALL contract into Anvil local chain for …\nhelper function to compute create2 safe proxy address\nDeploy a safe and a module proxies via HoprStakeFactory …\nDeregister safes and nodes from the network registry. Does …\nDeregister safes and nodes from the node-safe registry. It …\nencode a multisend transaction\nForce-sync the eligibility to given values. This can only …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet chain id and safe nonce\nget the domain separator of a safe instance …\nGet native balance and hopr token balance for given …\nGet registered safes for given nodes on the network …\nGet registered safes for given nodes on the node-safe …\nImplement getTransactionHash() function as in …\nhelper function to get salt nonce\nInclude nodes to the module\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMigrate nodes to be able to run in a new network.\nThis module was auto-generated with ethers-rs Abigen. More …\nThis module was auto-generated with ethers-rs Abigen. More …\nHelper function to predict module address. Note that here …\nHelper function to predict safe address\nWrap a transaction into a safe transaction payload Add the …\nRegister safes and nodes to the network registry, and …\nThis module was auto-generated with ethers-rs Abigen. More …\nUse safe to delegatecall to multisend contract Note that …\nSend one transaction via safe\nconvert the SafeTxOperation to exact one byte\nTransfer some native tokens from the caller to the list of …\nTransfer some HOPR tokens from the caller to the list of …\nContainer type for all input parameters for the <code>getTargets</code> …\nContainer type for all return fields from the <code>getTargets</code> …\nContainer type for all input parameters for the <code>isNode</code> …\nContainer type for all return fields from the <code>isNode</code> …\nThe parsed human-readable ABI of the contract.\nContainer type for all of the contract’s call\nContainer type for all input parameters for the <code>owner</code> …\nContainer type for all return fields from the <code>owner</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls the contract’s <code>getTargets</code> (0x63fe3b56) function\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the contract’s <code>isNode</code> (0x01750152) function\nCreates a new contract instance with the specified <code>ethers</code> …\nCalls the contract’s <code>owner</code> (0x8da5cb5b) function\nThe parsed human-readable ABI of the contract.\nContainer type for all input parameters for the <code>multiSend</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the contract’s <code>multiSend</code> (0x8d80ff0a) function\nCreates a new contract instance with the specified <code>ethers</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the <code>getOwners</code> …\nContainer type for all return fields from the <code>getOwners</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the <code>getThreshold</code> …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the <code>nonce</code> …\nContainer type for all return fields from the <code>nonce</code> …\nContainer type for all input parameters for the <code>removeOwner</code>…\nThe parsed human-readable ABI of the contract.\nContainer type for all of the contract’s call\nContainer type for all input parameters for the <code>setup</code> …\nCalls the contract’s <code>domainSeparator</code> (0xf698da25) …\nCalls the contract’s <code>encodeTransactionData</code> (0xe86637db) …\nCalls the contract’s <code>execTransaction</code> (0x6a761202) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls the contract’s <code>getOwners</code> (0xa0e67e2b) function\nCalls the contract’s <code>getThreshold</code> (0xe75235b8) function\nCalls the contract’s <code>getTransactionHash</code> (0xd8d11f78) …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the contract’s <code>isModuleEnabled</code> (0x2d9ad53d) …\nCreates a new contract instance with the specified <code>ethers</code> …\nCalls the contract’s <code>nonce</code> (0xaffed0e0) function\nCalls the contract’s <code>removeOwner</code> (0xf8dc5dd9) function\nCalls the contract’s <code>setup</code> (0xb63e800d) function\nRemove nodes and safes with a manager account\nForce sync the eligibility of safe accounts\nCLI arguments for <code>hopli network-registry</code>\nExecute command to deregister a node and its staking …\nExecute command to force sync eligibility of staking …\nExecute command to register a node and its staking account …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRun the execute_register function. By default, …\nEligibility of safes when calling …\nArguments to locate identity file(s) of HOPR node(s)\nArguments to locate identity file(s) of HOPR node(s)\nNetwork name, contracts config file root, and customized …\nNetwork name, contracts config file root, and customized …\nNetwork name, contracts config file root, and customized …\nnode addresses\nnode addresses\nAccess to the private key of a manager of Network Registry …\nAccess to the private key of a manager of Network Registry …\nAccess to the private key of a manager of Network Registry …\nAddresses of the safe proxy instances\nAddresses of the safe proxy instances\nCreate safe and module proxy if nothing exists\nDebug safe and module setup\nMigrate safe and module to a new network\nMove nodes to one single safe and module pair\nCLI arguments for <code>hopli safe-module</code>\nExecute the command, which quickly create necessary …\nExecute the command to debug the following:\nExecute the command, which migrates nodes to a new network …\nExecute the command, which moves nodes to a new managing …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRun the execute_safe_module_creation function\nadmin addresses\nAllowance of the channel contract to manage HOPR tokens on …\nAllowance of the channel contract to manage HOPR tokens on …\nThe amount of HOPR tokens (in floating number) to be …\nArguments to locate identity file(s) of HOPR node(s)\nArguments to locate identity file(s) of HOPR node(s)\nArguments to locate identity file(s) of HOPR node(s)\nArguments to locate identity file(s) of HOPR node(s)\nAccess to the private key, of which the wallet has …\nAccess to the private key, of which the wallet has …\nAccess to the private key, of which the wallet has …\nmodule address that the nodes move to\nmodule address that the nodes move to\nThe amount of native tokens (in floating number) to be …\nNetwork name, contracts config file root, and customized …\nNetwork name, contracts config file root, and customized …\nNetwork name, contracts config file root, and customized …\nNetwork name, contracts config file root, and customized …\nmodule address that the nodes move to\nsafe address that the nodes move to\nnode addresses\nnode addresses\nnode addresses\nnode addresses\nold module addresses\nAccess to the private key, of which the wallet either …\nAccess to the private key, of which the wallet either …\nAccess to the private key, of which the wallet either …\nsafe address that the nodes move to\nsafe address that the nodes move to\nThreshold for the generated safe\nA required smart contract (Safe or module proxy instance) …\nDefault announcement permissions, where nothing is …\nDefault capability permissions, as in smart contract\nDefault node permissions, where nothing is specified and …\nSafe domain separator typehash, as in …\nAmount of ETH to fund MULTICALL3_DEPLOYER, to deployer …\nProvided environement does not match with that in the …\nFail to run foundry\nEnumerates different errors produced by this crate.\nError when identity existed\nError due to supplying a non-existing file name\nError with the keystore file\nContract creation code for mullticall3, as in …\nMulticall3 deployer wallet\nError with middleware\nFail to find the identity directory\nParamters are missing\nFail to make a multisend call\nFail to make a multicall\nTopic hash for <code>NewHoprNodeStakeModule</code> event\nTopic hash for <code>NewHoprNodeStakeSafe</code> event\nTxn caller does not have the minter role\nError with HTTP Json RPC provider\nSafe compatibility fallback handler contract deployed for …\nTopic hash for <code>ExecutionSuccess</code> event, as in …\nSafe multisend contract deployed for v1.4.0,  …\nSafe proxy factory contract deployed for v1.4.0, …\nSafe implementation contract deployed for v1.4.1, as in …\nSafe transaction type hash, as in …\nStarting point for a linked list in safe contract, as in …\nSerde JSON Error\nSystem time rrror\nError when identity cannot be created\nFail to delete an identity\nError in parsing provided comma-separated addresses\nError propagated by IO operations\nFail to read identity\nFail to read password\nFail to read private key\nWrong foundry contract root is provided\nCannot find network details from the given network name\nError with signer wallet error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRead the current global minimum winning probability\nSet the global minimum ticket winning probability as an …\nCLI arguments for <code>hopli win-prob</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRun the execute_register function. By default, …\nNetwork name, contracts config file root, and customized …\nNetwork name, contracts config file root, and customized …\nAccess to the private key of a manager of Network Registry …\nNew winning probability")