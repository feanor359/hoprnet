searchState.loadedDescShard("chain_types", 0, "This crate contains various on-chain related modules and …\nHolds addresses of all smart contracts.\nHolds instances to contracts.\nThe TypedTransaction enum represents all Ethereum …\nTypes related to high-level actions that lead to Ethereum …\nAnnouncements contract\nTypes that are related to events that are raised on-chain …\nChannels contract\nCreates local Anvil instance.\nShort-hand for creating new EIP1559 transaction object.\nDecodes a signed TypedTransaction from a rlp encoded byte …\nDeploys testing environment (with dummy network registry …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHashes the transaction’s data with the included …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMax cost of the transaction\nNode management module contract (can be zero if safe is …\nNetwork registry contract\nNetwork registry proxy contract\nPrice oracle contract\nSafe registry contract\nHashes the transaction’s data. Does not double-RLP encode\nStake factory contract\nToken contract\nChain utilities used for testing.\nMinimum ticket winning probability contract\nEnumerates all possible on-chain state change requests.\nAnnounce node on-chain\nClose channel with the given source and destination\nFund channel with the given ID and amount\nOpen channel to the given destination with the given stake\nRedeem the given acknowledged ticket.\nRegister safe address with this node\nWithdraw given balance to the given address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnections to the node are allowed.\nPeer on-chain announcement event.\nEnumeration of HOPR chain events.\nChannel balance has decreased by an amount.\nChannel balance has increased by an amount.\nChannel closure has been finalized.\nChannel closure has been initiated.\nNew channel has been opened\nConnections to the node are not allowed.\nStatus of a node in network registry.\nNetwork registry update for a node.\nSafe has been registered with the node.\nContains TX hash along with the Chain Event data. This …\nTicket has been redeemed on a channel. If the channel is …\nChain event of interest\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTX hash\nAnnounced on-chain address\nMultiaddresses\nAnnounced peer id\nERC1820 deployer wallet\nSigned tx to create an ERC1820 contract\nAmount of ETH to fund ERC_1820_DEPLOYER, to deployer …\nSend a Safe transaction to the module to include …\nSend a Safe transaction to the token contract, to approve …\nCreates local Anvil instance.\nCreates a transaction that transfers the given <code>amount</code> of …\nDeploy a safe instance and a module instance.\nFunds the channel to the counterparty with the given …\nFunds the channel to the counterparty with the given …\nFunds the given wallet address with specified amount of …\nPrepare a safe transaction\nSend a Safe transaction to the module to include node to …\nMints specified amount of HOPR tokens to the contract …\nThis module was auto-generated with ethers-rs Abigen. More …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the …\nContainer type for all return fields from the …\nContainer type for all input parameters for the <code>nonce</code> …\nContainer type for all return fields from the <code>nonce</code> …\nThe parsed human-readable ABI of the contract.\nContainer type for all of the contract’s call\nCalls the contract’s <code>execTransaction</code> (0x6a761202) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls the contract’s <code>getTransactionHash</code> (0xd8d11f78) …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new contract instance with the specified <code>ethers</code> …\nCalls the contract’s <code>nonce</code> (0xaffed0e0) function")